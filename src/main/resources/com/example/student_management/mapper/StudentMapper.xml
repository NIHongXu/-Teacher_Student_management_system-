<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.student_management.Mapper.StudentMapper">

    <resultMap id="BaseResultMap" type="com.example.student_management.entity.Student">
        <id column="student_id" property="studentId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birth_date" property="birthDate" jdbcType="DATE"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="class_id" property="classId" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="insert" parameterType="com.example.student_management.entity.Student"
            useGeneratedKeys="true" keyProperty="studentId">
        INSERT INTO student (
            name, gender, birth_date, phone, email, address, class_id
        ) VALUES (
                     #{name}, #{gender}, #{birthDate}, #{phone}, #{email}, #{address}, #{classId}
                 )
    </insert>

    <update id="update" parameterType="com.example.student_management.entity.Student">
        UPDATE student SET
                           name = #{name},
                           gender = #{gender},
                           birth_date = #{birthDate},
                           phone = #{phone},
                           email = #{email},
                           address = #{address},
                           class_id = #{classId}
        WHERE student_id = #{studentId}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        DELETE FROM student
        WHERE student_id = #{studentId}
    </delete>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            student_id, name, gender, birth_date, phone, email, address, class_id
        FROM student
        WHERE student_id = #{studentId}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            student_id, name, gender, birth_date, phone, email, address, class_id
        FROM student
    </select>

    <select id="selectDistinctClasses" resultType="java.lang.String">
        SELECT DISTINCT class FROM students
    </select>

    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT
        student_id, name, gender, birth_date, phone, email, address, class_id
        FROM student
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="classId != null">
                AND class_id = #{classId}
            </if>
            <if test="gender != null and gender != ''">
                AND gender = #{gender}
            </if>
        </where>
    </select>

    <select id="selectByClassId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            student_id, name, gender, birth_date, phone, email, address, class_id
        FROM student
        WHERE class_id = #{classId}
    </select>
</mapper>